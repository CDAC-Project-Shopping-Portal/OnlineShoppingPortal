package com.sunbeam.config;



import java.util.Date;

import javax.crypto.SecretKey;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Service;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.security.Keys;

@Service
public class JWTProvider {

	private final SecretKey key = Keys.hmacShaKeyFor(JWTConstant.SECRET_KEY.getBytes());
	
	
	public String generateToken(Authentication auth) {
		return Jwts.builder()
				.setIssuedAt(new Date())
				.setExpiration(new Date(new Date().getTime() + 846000000))
				.claim("email", auth.getName())
				.signWith(key) 
				.compact();
	}  
	
	public String getEmailFromToken(String jwt) {
		Claims claims = Jwts.parserBuilder()
				.setSigningKey(key)
				.build()
				.parseClaimsJws(jwt)
				.getBody();
		return String.valueOf(claims.get("email"));
	}
	
	public boolean validateToken(String jwt) {
		try {
			System.out.println("JWT being vaidate:" + jwt);
			Jwts.parserBuilder().setSigningKey(key).build().parseClaimsJws(jwt);
			return true;
		}catch(Exception e) {
			return false;
		}
	}
}
